swagger: "2.0"
info:
  version: "1.0.0"
  title: "Redenomination API"
  contact:
    email: "dafaathaullah@apps.ipb.ac.id"
host: "carbide-bongo-338115.et.r.appspot.com"
basePath: "/api/"
schemes:
- "https"
- "http"
paths:
  /:
    get:
      tags:
      - other
      summary: Health check
      operationId: healthCheck
      responses:
        200:
          description: Server is fine

  /sessions/admins:
    post:
      tags:
      - authentication
      summary: Login as admin
      operationId: loginAdmin
      parameters:
        - in: body
          name: password
          schema:
            type: object
            required:
              - password
            properties:
              password:
                type: string
                example: IpB_b3rc4nd4
      responses:
        200:
          description: successful operation
          schema:
            allOf:
              - $ref: "#/definitions/SuccessResponseTemplate"
              - type: object
                properties:
                  message: 
                    type: string
                    example: "Successfully login as admin"
                  data:
                    type: object
                    properties:
                      jwtToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYWRtaW4iLCJkYXRhIjp7fSwiaWF0IjoxNjQyMTYzNDczfQ.ni9HTTWmyK22-SbZJJkgSkEhMzpzGDKRLoilpL--flc"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/ErrorResponseTemplate"
        401:
          description: wrong password
          schema:
            $ref: "#/definitions/ErrorResponseTemplate"
        500:
          description: server error
          schema:
            $ref: "#/definitions/ErrorResponseTemplate"

  /sessions/tokens:
    post:
      tags:
      - authentication
      summary: Login as user with token
      operationId: loginToken
      parameters:
        - in: body
          name: token
          schema:
            type: object
            required:
              - token
            properties:
              token:
                type: string
                example: DSH12F
      responses:
        200:
          description: successful operation
          schema:
            allOf:
              - $ref: "#/definitions/SuccessResponseTemplate"
              - type: object
                properties:
                  message: 
                    type: string
                    example: "Successfully login as buyer/seller"
                  data:
                    type: object
                    properties:
                      jwtToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYWRtaW4iLCJkYXRhIjp7fSwiaWF0IjoxNjQyMTYzNDczfQ.ni9HTTWmyK22-SbZJJkgSkEhMzpzGDKRLoilpL--flc"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/ErrorResponseTemplate"
        401:
          description: wrong token
          schema:
            $ref: "#/definitions/ErrorResponseTemplate"
        500:
          description: server error
          schema:
            $ref: "#/definitions/ErrorResponseTemplate"

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  ErrorResponseTemplate:
    type: "object"
    properties:
      status:
        type: "number"
        format: "int"
        example: 500
      message:
        type: "string"
        example: something has happened
  SuccessResponseTemplate:
    type: "object"
    properties:
      status:
        type: "number"
        format: "int"
        example: 200
      message:
        type: "string"
        example: successfully get